{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-dashboard/admin-dashboard.component.css","webpack:///./src/app/admin-dashboard/admin-dashboard.component.html","webpack:///./src/app/admin-dashboard/admin-dashboard.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/list-order/list-order.component.css","webpack:///./src/app/list-order/list-order.component.html","webpack:///./src/app/list-order/list-order.component.ts","webpack:///./src/app/list-workers/list-workers.component.css","webpack:///./src/app/list-workers/list-workers.component.html","webpack:///./src/app/list-workers/list-workers.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/order-form/order-form.component.css","webpack:///./src/app/order-form/order-form.component.html","webpack:///./src/app/order-form/order-form.component.ts","webpack:///./src/app/service/data/tiffin-center-data.service.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/user-dashboard/user-dashboard.component.css","webpack:///./src/app/user-dashboard/user-dashboard.component.html","webpack:///./src/app/user-dashboard/user-dashboard.component.ts","webpack:///./src/app/worker/worker.component.css","webpack:///./src/app/worker/worker.component.html","webpack:///./src/app/worker/worker.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9hZG1pbi1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  admin-dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { WorkerComponent } from './worker/worker.component';\nimport { ListWorkersComponent } from './list-workers/list-workers.component';\nimport { ErrorComponent } from './error/error.component';\nimport { OrderFormComponent } from './order-form/order-form.component';\nimport { ListOrderComponent } from './list-order/list-order.component';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { RouteGuardService } from './service/route-guard.service';\n\nconst routes: Routes = [\n  {path:'',component:LoginComponent},\n  { path:'login',component:LoginComponent }, \n  { path:'logout',component:LogoutComponent },\n  { path:'signup',component:SignupComponent },\n  { path:'worker/:id',component:WorkerComponent },\n  { path:'workers/:orderId',component:ListWorkersComponent },\n  { path:'workers',component:ListWorkersComponent },\n  { path:'order/:id',component:OrderFormComponent },\n  { path:'orders/:id',component:ListOrderComponent },\n  { path:'userDashboard/:id',component:UserDashboardComponent },\n  {path:'**',component:ErrorComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menu></app-menu>\\n\\n<div class=\\\"container\\\">\\n<router-outlet></router-outlet></div>\\n\\n<app-footer> </app-footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tiffincenter';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListWorkersComponent } from './list-workers/list-workers.component';\nimport { WorkerComponent } from './worker/worker.component';\nimport { LoginComponent } from './login/login.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ErrorComponent } from './error/error.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OrderFormComponent } from './order-form/order-form.component';\nimport { ListOrderComponent } from './list-order/list-order.component';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListWorkersComponent,\n    WorkerComponent,\n    LoginComponent,\n    MenuComponent,\n    FooterComponent,\n    LogoutComponent,\n    ErrorComponent,\n    OrderFormComponent,\n    ListOrderComponent,\n    UserDashboardComponent,\n    SignupComponent,\n    AdminDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  {{errorMessage}} \\n </p>\\n \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n\n  errorMessage='an error occured'\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer{\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    width:100%;\\r\\n    height:60px;\\r\\n    background-color:darkgrey;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixXQUFXO0lBQ1gsWUFBWTtJQUNaLDBCQUEwQjtDQUM3QiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgaGVpZ2h0OjYwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOmRhcmtncmV5O1xyXG59Il19 */\"","module.exports = \"<footer class=footer>\\n\\n  <div class=\\\"container\\\">\\n  <span class=\\\"text-muted\\\">All Rights Reserved 2020@Tavant</span>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3Qtb3JkZXIvbGlzdC1vcmRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Orders List</h1>\\n\\n<Br>\\n<BR>\\n<BR>\\n\\n<div class=\\\"container\\\">\\n  <table class=\\\"table\\\">\\n    <caption></caption>\\n    <thead>\\n      <tr>\\n        <th>id</th>\\n        <th>Name</th>\\n        <th>MobileNumber</th>\\n        <th>PickUpPointArea</th>\\n        <th>PickPointAddress</th>\\n        <th>DropPointArea</th>\\n        <th>DropPointAddress</th>\\n        <th>Status</th>\\n        <div *ngIf=\\\"this.id==-1\\\">\\n          <th>Action</th>\\n        </div>\\n      </tr>\\n    </thead>\\n    <tbody>\\n\\n\\n      <tr *ngFor=\\\"let tiffinOrder of tiffinOrders\\\">\\n        <td>{{tiffinOrder.id}}</td>\\n        <td>{{tiffinOrder.name}}</td>\\n        <td>{{tiffinOrder.mobileNumber}}</td>\\n        <td>{{tiffinOrder.pickUpPointArea}}</td>\\n        <td>{{tiffinOrder.pickPointAddressLine1}}</td>\\n        <td>{{tiffinOrder.dropPointArea}}</td>\\n        <td>{{tiffinOrder.dropPointAddressLine1}}</td>\\n        <td>{{tiffinOrder.status}}</td>\\n        <div *ngIf=\\\"this.id==-1\\\">\\n          <td>\\n            <button (click)=\\\"assignTask(tiffinOrder.id)\\\" class=\\\"btn btn-success\\\"> Assign</button>\\n          </td>\\n        </div>\\n      </tr>\\n\\n    </tbody>\\n  </table>\\n\\n\\n  <div *ngIf=\\\"this.id!=-1\\\">\\n    <div class=\\\"form-group\\\">\\n      <button (click)=back() class=\\\"btn btn-primary\\\">Back</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"this.id==-1\\\">\\n    <div class=\\\"form-group\\\">\\n      <button (click)=workerList() class=\\\"btn btn-success\\\">Workers</button>\\n      &nbsp;&nbsp;&nbsp;\\n      <button (click)=exit() class=\\\"btn btn-danger\\\">Exit&nbsp;&nbsp;&nbsp;</button>\\n    </div>\\n\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { TiffinCenterDataService } from '../service/data/tiffin-center-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nexport class TiffinOrder {\n  constructor(\n    public id: number,\n    public name: string,\n    public mobileNumber: string,\n    public pickUpPointArea: string,\n    public pickPointAddressLine1: string,\n    public pickPointAddressLine2: string,\n    public dropPointArea: string,\n    public dropPointAddressLine1: string,\n    public dropPointAddressLine2: string\n  ) { }\n}\n\n@Component({\n  selector: 'app-list-order',\n  templateUrl: './list-order.component.html',\n  styleUrls: ['./list-order.component.css']\n})\nexport class ListOrderComponent implements OnInit {\n  id: number\n  tiffinOrders: TiffinOrder[]\n  constructor(private tiffinService: TiffinCenterDataService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id']\n    if (this.id == -1)\n      this.refreshOrders();\n    else\n      this.refreshUserOrder();\n\n\n  }\n\n\n  refreshOrders() {\n    this.tiffinService.retrieveAllOrders().subscribe(response =>\n      this.tiffinOrders = response);\n\n  }\n\n  refreshUserOrder() {\n    this.tiffinService.retrieveUserOrders(this.id).subscribe(response =>\n      this.tiffinOrders = response);\n  }\n\n  assignTask(orderId) {\n    this.router.navigate(['workers', orderId])\n  }\n\n  workerList() {\n    this.router.navigate(['workers', -1]);\n\n  }\n\n  exit() {\n    this.router.navigate(['login']);\n  }\n\n  back() {\n    this.router.navigate(['userDashboard', this.id]);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3Qtd29ya2Vycy9saXN0LXdvcmtlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>My Workers's</h1>\\n\\n<Br>\\n<BR>\\n<BR>\\n<div class=\\\"alert alert-success\\\" *ngIf='message'>{{message}}</div>\\n\\n<div class=\\\"container\\\">\\n  <table class=\\\"table\\\">\\n    <caption> My Workers</caption>\\n    <thead>\\n      <tr>\\n        <th>id</th>\\n        <th>Name</th>\\n        <th>MobileNumber</th>\\n        <th>Area</th>\\n        <th>Active </th>\\n        <th> </th>\\n\\n\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n\\n      <!-- for(Todo todo: todos){-->\\n\\n      <tr *ngFor=\\\"let worker of workers\\\">\\n        <td>{{worker.id}}</td>\\n        <td>{{worker.name}}</td>\\n        <td>{{worker.mobileNumber}}</td>\\n        <td>{{worker.area}}</td>\\n        <td>{{worker.active}}</td>\\n\\n        <td>\\n          <button (click)=\\\"assignTask(worker.id)\\\" class=\\\"btn btn-success\\\"> Assign</button>\\n        </td>\\n        <td>\\n          <button (click)=\\\"updateWorker(worker.id)\\\" class=\\\"btn btn-warning\\\">Update</button>\\n        </td>\\n        <td>\\n          <button (click)=\\\"deleteWorker(worker.id,worker.name)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n        </td>\\n\\n      </tr>\\n\\n    </tbody>\\n  </table>\\n\\n\\n  <div class=\\\"row\\\">\\n    <button (click)=\\\"addWorker()\\\" class=\\\"btn btn-success\\\">Add</button>\\n  </div>\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TiffinCenterDataService } from '../service/data/tiffin-center-data.service';\n\nexport class Worker {\n  constructor(\n    public id: Number,\n    public name: string,\n    public mobileNumber: string,\n    public area: string,\n    public active: Number\n  ) {\n\n  }\n}\n\n@Component({\n  selector: 'app-list-workers',\n  templateUrl: './list-workers.component.html',\n  styleUrls: ['./list-workers.component.css']\n})\nexport class ListWorkersComponent implements OnInit {\n\n  //name =''\n  workers: Worker[]\n  message = ''\n  orderId: number\n  worker: Worker\n  constructor(private tiffinService: TiffinCenterDataService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.orderId = this.route.snapshot.params['orderId']\n    this.refreshWorkers();\n\n\n  }\n\n\n  refreshWorkers() {\n    this.tiffinService.retrieveAllWorkers().subscribe(response =>\n      this.workers = response);\n\n  }\n\n  deleteWorker(id, name) {\n    this.tiffinService.deleteWorker(id).subscribe(\n      response => {\n        //console.log(response);\n        this.message = `Delete of worker ${name} is Successful!`;\n        this.refreshWorkers();\n      });\n  }\n\n\n\n  updateWorker(id) {\n\n    this.router.navigate(['worker', id])\n    console.log(id);\n  }\n\n  addWorker() {\n\n    this.router.navigate(['worker', -1])\n  }\n\n  assignTask(workerId) {\n    this.tiffinService.retrieveWorker(workerId).subscribe(response => {\n      this.worker = response;\n      //console.log(this.worker);\n      this.tiffinService.assignWorker(this.orderId, this.worker).subscribe(response => {\n        // console.log(response)\n        this.router.navigate(['orders', -1]);\n      });\n    });\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"Container\\\">\\n  <!--<div class=\\\"alert alert-warning\\\" *ngIf='invalidLogin'>{{errorMessage}}</div>-->\\n\\n  <!-- <div class=\\\"card-body\\\">\\n  <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" placeholder=\\\"Username\\\" size=\\\"30px\\\"><br><br>\\n  <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" size=\\\"30px\\\">\\n\\n  \\n  <br><br><br>\\n    <button (click)=handleLogin() class=\\\"btn btn-success\\\">Login</button> &nbsp;&nbsp;&nbsp;\\n    <button (click)=createUser() class=\\\"btn btn-info\\\">Signup</button> \\n\\n  </div> -->\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-md-4 m-auto\\\">\\n      <div class=\\\"card mt-5\\\">\\n        <h5 class=\\\"card-header text-center\\\">Login</h5>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"credential.username\\\" placeholder=\\\"Username\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"credential.password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <button (click)=handleLogin() class=\\\"btn btn-success btn-sm form-control\\\">Login</button>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <button (click)=createUser() class=\\\"btn btn-info btn-sm form-control\\\">Signup</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\nimport { TiffinCenterDataService } from '../service/data/tiffin-center-data.service';\nimport { MenuComponent } from '../menu/menu.component';\nimport { Credential } from '../signup/signup.component';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // username = ''\n  // password = ''\n  errorMessage = 'Invalid Credentials'\n  invalidLogin = false\n  id\n  credential: Credential\n  constructor(private router: Router, private tiffinService: TiffinCenterDataService) { }\n\n  ngOnInit() {\n    this.credential = new Credential(1, \"\", \"\")\n  }\n\n  handleLogin() {\n\n    /*\n        this.tiffinService.handleLogin(this.username, this.password).subscribe(\n          response => {\n            this.id = response\n            if (this.id == 138) {\n              this.router.navigate(['orders', -1])\n            }\n            else if (this.id != null) {\n              sessionStorage.setItem('authenticaterUser', this.username);\n              console.log(this.id);\n    \n              this.router.navigate(['userDashboard', this.id]);\n            }\n            else\n              this.router.navigate(['login'])\n    \n          });\n    */\n\n    //console.log(this.credential.username);\n    //console.log(this.credential.password);\n\n    this.tiffinService.handleLogin(this.credential).subscribe(\n      response => {\n        this.id = response\n        if (this.id == 138) {\n          this.router.navigate(['orders', -1])\n        }\n        else if (this.id != null) {\n          sessionStorage.setItem('authenticaterUser', this.credential.username);\n          //console.log(this.id);\n\n          this.router.navigate(['userDashboard', this.id]);\n        }\n        else\n          this.router.navigate(['login'])\n\n      });\n\n\n  }\n\n\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticaterUser');\n    return !(user == null)\n  }\n  createUser() {\n    this.router.navigate(['signup'])\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n    Thank You For Using Our Service.\\n</p>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private route: Router) { }\n\n  ngOnInit() {\n    sessionStorage.removeItem('authenticaterUser');\n    this.route.navigate(['login']);\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<header>\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n    <div>\\n      <a href=\\\"\\\" class=\\\"navbar-brand\\\">Bunzo</a>\\n    </div>\\n\\n    <ul class=\\\"navbar-nav\\\">\\n      <li>\\n        <a *ngIf=\\\"this.isUserLoggedIn\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Home</a>\\n      </li>\\n\\n    </ul>\\n\\n    <ul class=\\\"navbar-nav navbar-collapse justify-content-end\\\">\\n      <li>\\n        <a *ngIf=\\\"this.isUserLoggedIn\\\" routerLink=\\\"#\\\" class=\\\"nav-link\\\">MyOrders</a>\\n      </li>\\n      <li>\\n        <a *ngIf=\\\"!this.isUserLoggedIn\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a>\\n      </li>\\n      <li>\\n        <a *ngIf=\\\"this.isUserLoggedIn\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">Logout</a>\\n      </li>\\n    </ul>\\n\\n  </nav>\\n</header>\"","import { Component, OnInit } from '@angular/core';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\nimport { LoginComponent } from '../login/login.component';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  isUserLoggedIn: boolean = false;\n  constructor() { }\n\n  ngOnInit() {\n    // this.isUserLoggedIn= this.authenticationService.isUserLoggedIn();\n    let user = sessionStorage.getItem('authenticaterUser');\n    if (user != null)\n      this.isUserLoggedIn = true;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyLWZvcm0vb3JkZXItZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <form>\\n\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"tiffinOrder.name\\\" class=\\\"form-control\\\" name=\\\"name\\\" required=\\\"required\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\">\\n    </fieldset>\\n\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>Mobile Number</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"tiffinOrder.mobileNumber\\\" class=\\\"form-control\\\" name=\\\"mobileNumber\\\" required=\\\"required\\\" minlength=\\\"10\\\"\\n        maxlength=\\\"10\\\">\\n    </fieldset>\\n\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>PickUpPoint Area</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"tiffinOrder.pickUpPointArea\\\" class=\\\"form-control\\\" name=\\\"area\\\" required=\\\"required\\\" minlength=\\\"5\\\">\\n    </fieldset>\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>PickUpPoint AddressLine1</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"tiffinOrder.pickPointAddressLine1\\\" class=\\\"form-control\\\" name=\\\"active\\\" required=\\\"required\\\"\\n        minlength=\\\"5\\\">\\n    </fieldset>\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>PickUpPoint AddressLine2</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"tiffinOrder.pickPointAddressLine2\\\" class=\\\"form-control\\\" name=\\\"active\\\" required=\\\"required\\\"\\n        minlength=\\\"5\\\">\\n    </fieldset>\\n\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>DropPoint Area</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"tiffinOrder.dropPointArea\\\" class=\\\"form-control\\\" name=\\\"area\\\" required=\\\"required\\\" minlength=\\\"5\\\">\\n    </fieldset>\\n\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>DropPoint AddressLine1</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"tiffinOrder.dropPointAddressLine1\\\" class=\\\"form-control\\\" name=\\\"active\\\" required=\\\"required\\\"\\n        minlength=\\\"5\\\">\\n    </fieldset>\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>DropPoint AddressLine2</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"tiffinOrder.dropPointAddressLine2\\\" class=\\\"form-control\\\" name=\\\"active\\\" required=\\\"required\\\"\\n        minlength=\\\"5\\\">\\n    </fieldset>\\n\\n    <button (click)=createOrder() type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TiffinCenterDataService } from '../service/data/tiffin-center-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TiffinOrder } from '../list-order/list-order.component';\n\n\n\n@Component({\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css']\n})\n\nexport class OrderFormComponent implements OnInit {\n  id: number\n\n  tiffinOrder: TiffinOrder\n  constructor(private router: Router, private route: ActivatedRoute, private tiffinService: TiffinCenterDataService) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.tiffinOrder = new TiffinOrder(this.id, \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\")\n  }\n\n\n\n  createOrder() {\n    this.tiffinService.createOrder(this.id, this.tiffinOrder).subscribe(response => {\n      console.log(response)\n      this.router.navigate(['userDashboard', this.id]);\n    });\n\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TiffinOrder } from '../../list-order/list-order.component';\nimport { User, Credential } from '../../signup/signup.component';\nimport { Worker } from '../../list-workers/list-workers.component';\nimport { environment } from '../../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TiffinCenterDataService {\n\n\n  constructor(private http: HttpClient) { }\n\n  retrieveAllWorkers() {\n\n    return this.http.get<Worker[]>(`${environment.applicationUrl}/bunzo/workers`);\n\n  }\n\n  deleteWorker(id) {\n    return this.http.delete(`${environment.applicationUrl}/bunzo/workers/${id}`)\n  }\n\n\n\n  retrieveWorker(id) {\n\n    return this.http.get<Worker>(`${environment.applicationUrl}/bunzo/workers/${id}`);\n\n  }\n\n\n  updateWorker(id, worker) {\n    if (id != -1)\n      return this.http.put(`${environment.applicationUrl}/bunzo/workers/${id}`, worker);\n    else\n      return this.http.post(`${environment.applicationUrl}/bunzo/workers`, worker);\n  }\n\n\n\n  createOrder(id, tiffinOrder) {\n    return this.http.post(`${environment.applicationUrl}/bunzo/orders/${id}`, tiffinOrder);\n  }\n\n  retrieveAllOrders() {\n\n    return this.http.get<TiffinOrder[]>(`${environment.applicationUrl}/bunzo/orders`);\n\n  }\n\n  handleLogin(credential: Credential) {\n    return this.http.post(`${environment.applicationUrl}/bunzo/login`, credential);\n  }\n\n\n\n  retrieveUserOrders(id) {\n\n    return this.http.get<TiffinOrder[]>(`${environment.applicationUrl}/bunzo/orders/users/${id}`);\n\n  }\n\n\n  assignWorker(orderId: number, worker) {\n    return this.http.put(`${environment.applicationUrl}/bunzo/orders/${orderId}`, worker);\n  }\n\n  createUser(user: User, password: string) {\n    return this.http.post(`${environment.applicationUrl}/bunzo/signup/${password}`, user);\n  }\n\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <br>\\n  <br>\\n  <br>\\n  <form>\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-control\\\" name=\\\"name\\\" required=\\\"required\\\">\\n    </fieldset>\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" name=\\\"email\\\" required=\\\"required\\\">\\n    </fieldset>\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>Role</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"user.role\\\" class=\\\"form-control\\\" name=\\\"role\\\" required=\\\"required\\\" maxlength=\\\"5\\\">\\n    </fieldset>\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"credential.password\\\" class=\\\"form-control\\\" name=\\\"password\\\" required=\\\"required\\\">\\n    </fieldset>\\n    <br>\\n    <br>\\n    <br>\\n    <div style=\\\"text-align: center\\\">\\n      <button (click)=createUser() type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TiffinCenterDataService } from '../service/data/tiffin-center-data.service';\n\nexport class User {\n  constructor(\n    public name: string,\n    public email: string,\n    public role: string,\n    //  public credential:Credential\n  ) { }\n}\nexport class Credential {\n  constructor(\n    public id: Number,\n    public username: string,\n    public password: string) { }\n}\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user: User;\n  credential: Credential;\n  constructor(private router: Router, private tiffinService: TiffinCenterDataService) { }\n\n  ngOnInit() {\n    this.user = new User(\"\", \"\", \"user\");\n    this.credential = new Credential(1,\"\", \"\");\n  }\n\n  createUser() {\n    this.tiffinService.createUser(this.user, this.credential.password).subscribe(response => {\n      this.router.navigate(['login']);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZGFzaGJvYXJkL3VzZXItZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-4 col-md-4 m-auto\\\">\\n    <div class=\\\"card mt-5\\\">\\n      <h5 class=\\\"card-header text-center\\\">BUNZO</h5>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <button (click)=createOrder() class=\\\"btn btn-success btn-sm form-control\\\">Create Order</button>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <button (click)=readPreviousOrders() class=\\\"btn btn-info btn-sm form-control\\\">My Orders</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TiffinCenterDataService } from '../service/data/tiffin-center-data.service';\nimport { ListOrderComponent } from '../list-order/list-order.component';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n  id: number\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() \n  {\n    this.id = this.route.snapshot.params['id'];\n  }\n\n\n  createOrder() {\n    this.router.navigate(['order', this.id]);\n  }\n\n  readPreviousOrders() {\n    this.router.navigate(['orders', this.id]);\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmtlci93b3JrZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Worker</h1>\\n<div class=\\\"container\\\">\\n\\n    <form>\\n\\n\\n        <fieldset class=\\\"form-group\\\">\\n\\n            <label>Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"worker.name\\\" class=\\\"form-control\\\" name=\\\"name\\\" required=\\\"required\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\">\\n        </fieldset>\\n\\n\\n        <fieldset class=\\\"form-group\\\">\\n            <label>Mobile Number</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"worker.mobileNumber\\\" class=\\\"form-control\\\" name=\\\"mobileNumber\\\" required=\\\"required\\\" minlength=\\\"10\\\"\\n                maxlength=\\\"10\\\">\\n        </fieldset>\\n\\n\\n        <fieldset class=\\\"form-group\\\">\\n            <label>Area</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"worker.area\\\" class=\\\"form-control\\\" name=\\\"area\\\" required=\\\"required\\\" minlength=\\\"5\\\">\\n        </fieldset>\\n\\n        <fieldset class=\\\"form-group\\\">\\n            <label>Active</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"worker.active\\\" class=\\\"form-control\\\" name=\\\"active\\\" required=\\\"required\\\" minlength=\\\"5\\\">\\n        </fieldset>\\n\\n        <button (click)=updateWorker() type=\\\"submit\\\" class=\\\"btn btn-success\\\"> Save</button>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TiffinCenterDataService } from '../service/data/tiffin-center-data.service';\nimport { Worker } from '../list-workers/list-workers.component';\n\n@Component({\n  selector: 'app-worker',\n  templateUrl: './worker.component.html',\n  styleUrls: ['./worker.component.css']\n})\nexport class WorkerComponent implements OnInit {\n  id: number\n  worker: Worker\n  constructor(private router: Router, private route: ActivatedRoute, private tiffinService: TiffinCenterDataService) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.worker = new Worker(this.id, \"\", \"\", \"\", 0)\n    if (this.id != -1) {\n\n      //console.log(this.id)  \n      this.tiffinService.retrieveWorker(this.id).subscribe\n        (data => {\n          this.worker = data\n          //console.log(this.worker)\n        });\n    }\n  }\n\n\n  updateWorker() {\n    this.tiffinService.updateWorker(this.id, this.worker).subscribe(response => {\n      //console.log(response)\n      this.router.navigate(['workers']);\n    });\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  applicationUrl : \"http://localhost:8080\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}